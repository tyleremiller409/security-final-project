FROM ubuntu:18.04 as souffle
ARG CMAKE_VERSION=3.15.0

RUN export DEBIAN_FRONTEND=noninteractive
RUN ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
RUN apt-get -y update && apt-get -y install build-essential cmake curl \
    doxygen flex git libffi-dev libtool lsb-release make mcpp pkg-config \
    software-properties-common zlib1g-dev

RUN add-apt-repository ppa:ubuntu-toolchain-r/test \
    && apt-get -y update && apt-get -y install g++-9

# bison
RUN curl https://ftp.gnu.org/gnu/bison/bison-3.5.1.tar.xz --output bison-3.5.1.tar.xz \
    && tar -xf bison-3.5.1.tar.xz \
    && cd bison-3.5.1 \
    && ./configure \
    && make install

# Install CMake
RUN curl -SL https://cmake.org/files/v$(echo $CMAKE_VERSION | sed -r 's/\.[0-9]+$//;')/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz \
    |tar -xz --strip-components=1 -C /usr/local

# souffle
RUN git clone -b 2.1 https://github.com/souffle-lang/souffle && \
    cd souffle && \
    cmake . -Bbuild -DCMAKE_BUILD_TYPE=Release -DSOUFFLE_USE_CURSES=0 \
    -DCMAKE_CXX_COMPILER=g++-9 -DSOUFFLE_USE_SQLITE=0 -DSOUFFLE_DOMAIN_64BIT=1 && \
    cd build && \
    make install -j4

FROM ubuntu:18.04

ARG BOOST_VERSION=1.67
ARG CMAKE_VERSION=3.12.1

# Use bash for more convenient variable substitution syntax
SHELL ["/bin/bash", "-c"]


# Install common packages
RUN apt-get -y update && apt-get -y install clang clang-format \
    curl doxygen git libpq-dev libprotobuf-dev libtool libstdc++-7-dev \
    make mcpp pkg-config protobuf-compiler python3 python3-pip \
    software-properties-common unzip wget zlib1g-dev

# This is required to run souffle compiled with g++-9
RUN add-apt-repository ppa:ubuntu-toolchain-r/test \
    && apt-get -y update && apt-get -y install g++-9

RUN apt-get remove -y python3-keyrings.alt
RUN python3 -m pip install distro pyyaml psycopg2-binary

# Install CMake
RUN curl -SL https://cmake.org/files/v$(echo $CMAKE_VERSION | sed -r 's/\.[0-9]+$//;')/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz \
    |tar -xz --strip-components=1 -C /usr/local

# Install cross-platform utils
RUN apt-get -y update \
 && apt-get -y install \
      gcc-arm-linux-gnueabihf \
      g++-arm-linux-gnueabihf \
      gcc-aarch64-linux-gnu \
      g++-aarch64-linux-gnu \
      gcc-mips-linux-gnu \
      g++-mips-linux-gnu \
      qemu-user

RUN dpkg --add-architecture i386 \
 && apt-get -y update \
 && apt-get -y install \
      libc6-dev:i386 \
      libstdc++-7-dev:i386 \
      lib32gcc-7-dev \
      lib32stdc++-7-dev

# Create the necessary links and cache to the most recent shared libraries
# found in the directory /usr/mips-linus-gnu/ so that the run-time linker can
# use the cache.
RUN cd /usr/mips-linux-gnu \
 && mkdir etc \
 && ldconfig -c etc/ld.do.cache -r .

COPY --from=souffle /usr/local/bin/souffle-compile /usr/bin/souffle-compile
COPY --from=souffle /usr/local/bin/souffle /usr/bin/souffle
COPY --from=souffle /usr/local/bin/souffleprof /usr/bin/souffleprof
COPY --from=souffle /usr/local/include/souffle/ /usr/include/souffle

# Install Boost
RUN add-apt-repository ppa:mhier/libboost-latest && \
    apt-get -y update && \
    apt-get -y install libboost${BOOST_VERSION}-dev

# Install LIEF
RUN cd /usr/local/src \
    && git clone -b 0.11.5 https://github.com/lief-project/LIEF.git \
    && cd LIEF \
    && mkdir build \
    && cd build \
    && cmake -DLIEF_PYTHON_API=off -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=Off .. \
    && make \
    && make install

# Install sstrip
COPY etc/sstrip /usr/bin/sstrip

ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8

RUN python3 -m pip install pre-commit
WORKDIR /pre-commit-setup
RUN git init
COPY .pre-commit-config.yaml .
RUN pre-commit install-hooks

# Disable git ssl so we can clone libehp
RUN git config --global http.sslverify false
