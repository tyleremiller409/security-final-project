//===- data.dl ----------------------------------------------*- datalog -*-===//
//
//  Copyright (C) 2022 GrammaTech, Inc.
//
//  This code is licensed under the GNU Affero General Public License
//  as published by the Free Software Foundation, either version 3 of
//  the License, or (at your option) any later version. See the
//  LICENSE.txt file in the project root for license terms or visit
//  https://www.gnu.org/licenses/agpl.txt.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  GNU Affero General Public License for more details.
//
//  This project is sponsored by the Office of Naval Research, One Liberty
//  Center, 875 N. Randolph Street, Arlington, VA 22203 under contract #
//  N68335-17-C-0700.  The content of the information does not necessarily
//  reflect the position or policy of the Government and no official
//  endorsement should be inferred.
//
//===----------------------------------------------------------------------===//
/**
Manage access to raw binary data
*/

.functor functor_data_exists(EA:address,Size:unsigned):unsigned
.functor functor_data_u8(EA:address):unsigned
.functor functor_data_s16(EA:address):number
.functor functor_data_s32(EA:address):number
.functor functor_data_s64(EA:address):number

// data from sections
.decl data_byte(EA:address,Value:unsigned) inline

data_byte(EA,Value):-
    @functor_data_exists(EA,1) = 1,
    Value = @functor_data_u8(EA).

/**
Signed representation of the data word at EA.
*/
.decl data_word(EA:address,Size:unsigned,Val:number) inline

data_word(EA,Size,Value):-
    Size = 2,
    @functor_data_exists(EA,Size) = 1,
    Value = @functor_data_s16(EA).

data_word(EA,Size,Value):-
    Size = 4,
    @functor_data_exists(EA,Size) = 1,
    Value = @functor_data_s32(EA).

data_word(EA,Size,Value):-
    Size = 8,
    @functor_data_exists(EA,Size) = 1,
    Value = @functor_data_s64(EA).
