# Restrict these test cases to systems with compatible QEMU packages.
distro:
  name: Ubuntu
  version: ["18.04", "20.04"]

default: &default
  path: examples
  binary: ex

  # Compilation configuration.
  build: &default-build
    c: ["aarch64-linux-gnu-gcc"]
    cpp: ["aarch64-linux-gnu-g++"]
    optimizations: ["-O0", "-O1", "-O2", "-O3", "-Os"]
    flags: []

  # Reassembly configuration.
  reassemble:
    compiler: "aarch64-linux-gnu-gcc"
    flags: []
    skip: false

  # Test configuration.
  test: &default-test
    wrapper: "qemu-aarch64 -L /usr/aarch64-linux-gnu"
    strip_exe: "aarch64-linux-gnu-strip"
    strip: false
    skip: false
    check_cfg: true

assembly: &assembly
  <<: *default
  path: examples/arm64_asm_examples
  build:
    <<: *default-build
    optimizations: [""]

default-cpp: &default-cpp
  <<: *default
  reassemble:
    compiler: "aarch64-linux-gnu-g++"
    flags: ["-no-pie"]
    skip: false

  test:
    <<: *default-test
    check_cfg: false

tests:
  - name: hello
    binary: hello
    <<: *default
    path: examples/arm64

  - name: password
    binary: password
    <<: *default
    path: examples/arm64

  - name: ex1
    <<: *default

  - name: ex_2modulesPIC
    <<: *default

  - name: ex_confusing_data
    <<: *default

  - name: ex_exceptions1
    <<: *default-cpp

  - name: ex_exceptions2
    <<: *default-cpp

  - name: ex_exceptions3
    <<: *default-cpp

  - name: ex_false_pointer_array
    <<: *default

  - name: ex_float
    <<: *default

  - name: ex_fprintf
    <<: *default

  - name: ex_getoptlong
    <<: *default

  - name: ex_init_array
    <<: *default
    build:
      <<: *default-build
      # Testing one version is enough.
      optimizations: ["-O0"]
    reassemble:
      compiler: "aarch64-linux-gnu-g++"
      flags: []
      skip: false
    test:
      <<: *default-test
      # Don't check CFG on C++ binaries
      check_cfg: false

  - name: ex_memberPointer
    <<: *default
    reassemble:
      compiler: "aarch64-linux-gnu-g++"
      flags: []
      skip: false

    test:
      <<: *default-test
      # Don't check CFG on C++ binaries
      check_cfg: false

  - name: ex_noreturn
    <<: *default
    test:
      <<: *default-test
      # noreturn may result in unreachable code.
      check_cfg: false

  - name: ex_pointerReatribution
    <<: *default

  - name: ex_pointerReatribution2
    <<: *default

  - name: ex_pointerReatribution3
    <<: *default

  - name: ex_stat
    <<: *default

  - name: ex_struct
    <<: *default

  - name: ex_switch
    <<: *default

  - name: ex_uninitialized_data
    <<: *default

  - name: ex_virtualDispatch
    <<: *default
    reassemble:
      compiler: "aarch64-linux-gnu-g++"
      flags: []
      skip: false

    test:
      <<: *default-test
      # Don't check CFG on C++ binaries
      check_cfg: false

  - name: ex_cond_branch
    <<: *assembly

  - name: ex_registers
    <<: *assembly

  - name: ex_op_types
    <<: *assembly
    test:
      # To include some of the operand types, we have to use instructions that
      # we can't actually execute in userspace.
      # Just make sure it disassembles and re-assembles without errors
      <<: *default-test
      skip: true

  - name: ex_switch1
    <<: *assembly

  - name: ex_stack_split_load
    <<: *assembly

  # ex1, stripped, dynamic
  - name: ex1
    <<: *default
    test:
      <<: *default-test
      strip: true
      check_cfg: false  # TODO: re-enable when #363 is fixed.
